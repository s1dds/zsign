name: Compile zsign

on:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Cache OpenSSL
        uses: actions/cache@v2
        with:
          path: |
            *.deb
          key: ${{ runner.os }}-openssl-${{ hashFiles('*.deb') }}
          restore-keys: |
            ${{ runner.os }}-openssl-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip build-essential checkinstall zlib1g-dev wget g++ cmake make checkinstall zlib1g-dev
          sudo apt-get install libssl-dev pkg-config

      - name: Download and Install the latest OpenSSL
        run: |
          # Fetch the page and list all versions
          wget -qO- http://security.ubuntu.com/ubuntu/pool/main/o/openssl/ | grep -oP 'openssl_1\.1\.1f-1ubuntu2\.\K\d+(?=(_amd64|_i386)\.deb)' | sort -V | uniq > versions.txt

          # Extract the latest version
          VERSION=$(tail -n 1 versions.txt)

          # Clean up
          rm versions.txt

          # Check if we got a version
          if [ -z "$VERSION" ]; then
            echo "Failed to find the latest OpenSSL version."
            exit 1
          fi

          # Define file names
          OPENSSL_DEB="openssl_1.1.1f-1ubuntu2.${VERSION}_amd64.deb"
          LIBSSL_DEV_DEB="libssl-dev_1.1.1f-1ubuntu2.${VERSION}_amd64.deb"
          LIBSSL_DEB="libssl1.1_1.1.1f-1ubuntu2.${VERSION}_amd64.deb"

          # Check and download if not cached
          if [ ! -f "$OPENSSL_DEB" ]; then
              wget "http://security.ubuntu.com/ubuntu/pool/main/o/openssl/$OPENSSL_DEB"
          fi
          if [ ! -f "$LIBSSL_DEV_DEB" ]; then
              wget "http://security.ubuntu.com/ubuntu/pool/main/o/openssl/$LIBSSL_DEV_DEB"
          fi
          if [ ! -f "$LIBSSL_DEB" ]; then
              wget "http://security.ubuntu.com/ubuntu/pool/main/o/openssl/$LIBSSL_DEB"
          fi

          # Install the packages
          sudo DEBIAN_FRONTEND=noninteractive dpkg -i --force-confnew $OPENSSL_DEB $LIBSSL_DEV_DEB $LIBSSL_DEB

      - name: Clone and Install OpenSSL
        run: |
          git clone https://github.com/openssl/openssl.git
          cd openssl
          ./config
          make
          sudo make install

      - name: Compile zsign
        run: |
          g++ *.cpp common/*.cpp -lcrypto -O3 -o zsign

      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          files: |
            ${{ github.workspace }}/zsign
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
